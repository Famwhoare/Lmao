local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==6) then v40=nil;function v40() local v43=0;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==3) then for v91=1271 -(226 + 1044) ,v35() do v45[v91-1 ]=v40();end return v47;end if (v43==2) then for v93=1,v48 do local v94=0;local v95;local v96;while true do if (v94==0) then v95=v33();v96=nil;v94=1;end if (v94==1) then if (v95==(1638 -(1523 + 114))) then v96=v33()~=0 ;elseif (v95==(2 + 0)) then v96=v36();elseif (v95==3) then v96=v37();end v49[v93]=v96;break;end end end v47[3]=v33();for v97=1,v35() do local v98=0;local v99;while true do if (v98==0) then v99=v33();if (v32(v99,1,1)==0) then local v128=v32(v99,2,3);local v129=v32(v99,4,6);local v130={v34(),v34(),nil,nil};if (v128==0) then local v132=0;while true do if (v132==0) then v130[3]=v34();v130[4]=v34();break;end end elseif (v128==1) then v130[3]=v35();elseif (v128==2) then v130[3]=v35() -(2^16) ;elseif (v128==3) then local v143=0;while true do if (v143==0) then v130[3]=v35() -(2^16) ;v130[4]=v34();break;end end end if (v32(v129,1,1)==1) then v130[2]=v49[v130[2]];end if (v32(v129,2,2)==1) then v130[3 -0 ]=v49[v130[3]];end if (v32(v129,3,1068 -(68 + 997) )==1) then v130[4]=v49[v130[4]];end v44[v97]=v130;end break;end end end v43=3;end if (0==v43) then v44={};v45={};v46={};v43=1;end if (1==v43) then v47={v44,v45,nil,v46};v48=v35();v49={};v43=2;end end end v41=nil;v29=7;end if (3==v29) then v35=nil;function v35() local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==0) then v51,v52,v53,v54=v9(v27,v30,v30 + 3 );v30=v30 + (572 -(367 + 201)) ;v50=1;end if (1==v50) then return (v54 * (16778143 -(214 + 713))) + (v53 * 65536) + (v52 * 256) + v51 ;end end end v36=nil;v29=4;end if (v29==7) then function v41(v55,v56,v57) local v58=0;local v59;local v60;local v61;while true do if (v58==0) then v59=v55[1];v60=v55[2];v58=1;end if (v58==1) then v61=v55[12 -9 ];return function(...) local v100=v59;local v101=v60;local v102=v61;local v103=v39;local v104=1;local v105= -1;local v106={};local v107={...};local v108=v20("#",...) -1 ;local v109={};local v110={};for v116=0,v108 do if (v116>=v102) then v106[v116-v102 ]=v107[v116 + (118 -(32 + 85)) ];else v110[v116]=v107[v116 + 1 ];end end local v111=(v108-v102) + 1 + 0 ;local v112;local v113;while true do v112=v100[v104];v113=v112[1];if (v113<=56) then if (v113<=27) then if (v113<=13) then if (v113<=6) then if (v113<=2) then if (v113<=(0 + 0)) then do return v110[v112[2]]();end elseif (v113==1) then v110[v112[959 -(892 + 65) ]][v112[3]]=v112[9 -5 ];else v110[v112[2]]=v56[v112[3]];end elseif (v113<=4) then if (v113==3) then if v110[v112[2]] then v104=v104 + 1 ;else v104=v112[3];end else v110[v112[2]]=v112[3];end elseif (v113>5) then local v169=0;local v170;while true do if (0==v169) then v170=v112[2];v110[v170](v21(v110,v170 + 1 ,v105));break;end end else v110[v112[2]]=v110[v112[3]]%v112[4] ;end elseif (v113<=9) then if (v113<=7) then local v144=0;local v145;while true do if (0==v144) then v145=v112[2];v110[v145]=v110[v145](v21(v110,v145 + 1 ,v105));break;end end elseif (v113>8) then local v172=0;local v173;local v174;local v175;local v176;while true do if (v172==0) then v173=v112[3 -1 ];v174,v175=v103(v110[v173](v21(v110,v173 + 1 ,v112[3])));v172=1;end if (v172==1) then v105=(v175 + v173) -1 ;v176=0;v172=2;end if (v172==2) then for v473=v173,v105 do local v474=0;while true do if (v474==0) then v176=v176 + (1 -0) ;v110[v473]=v174[v176];break;end end end break;end end else local v177=v112[2];do return v21(v110,v177,v105);end end elseif (v113<=11) then if (v113>(360 -(87 + 263))) then local v178=0;local v179;while true do if (v178==0) then v179=v112[2];do return v21(v110,v179,v105);end break;end end elseif (v110[v112[2]]<=v112[4]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113==(192 -(67 + 113))) then v104=v112[3];else local v181=0;local v182;local v183;local v184;local v185;while true do if (v181==2) then for v475=v182,v105 do local v476=0;while true do if (v476==0) then v185=v185 + 1 ;v110[v475]=v183[v185];break;end end end break;end if (v181==0) then v182=v112[2];v183,v184=v103(v110[v182](v21(v110,v182 + 1 ,v105)));v181=1;end if (v181==1) then v105=(v184 + v182) -1 ;v185=0 + 0 ;v181=2;end end end elseif (v113<=(49 -29)) then if (v113<=16) then if (v113<=14) then local v146=v112[2];v110[v146]=v110[v146](v110[v146 + 1 ]);elseif (v113>15) then v110[v112[2]][v112[3 + 0 ]]=v110[v112[4]];else local v188=0;local v189;while true do if (0==v188) then v189=v112[2];do return v110[v189](v21(v110,v189 + (3 -2) ,v112[3]));end break;end end end elseif (v113<=(970 -(802 + 150))) then if (v113==17) then local v190=0;local v191;while true do if (0==v190) then v191=v112[2];v110[v191]=v110[v191](v21(v110,v191 + 1 ,v112[7 -4 ]));break;end end else v110[v112[2]]=v110[v112[3]][v112[4]];end elseif (v113==19) then local v194=v112[3 -1 ];local v195={};for v362=1 + 0 , #v109 do local v363=0;local v364;while true do if (v363==0) then v364=v109[v362];for v521=997 -(915 + 82) , #v364 do local v522=0;local v523;local v524;local v525;while true do if (v522==1) then v525=v523[2];if ((v524==v110) and (v525>=v194)) then local v573=0;while true do if (v573==0) then v195[v525]=v524[v525];v523[1]=v195;break;end end end break;end if (v522==0) then v523=v364[v521];v524=v523[1];v522=1;end end end break;end end end else local v196=0;local v197;local v198;while true do if (v196==1) then for v478=1, #v109 do local v479=0;local v480;while true do if (0==v479) then v480=v109[v478];for v564=0, #v480 do local v565=0;local v566;local v567;local v568;while true do if (v565==1) then v568=v566[2];if ((v567==v110) and (v568>=v197)) then local v580=0;while true do if (v580==0) then v198[v568]=v567[v568];v566[1]=v198;break;end end end break;end if (v565==0) then v566=v480[v564];v567=v566[2 -1 ];v565=1;end end end break;end end end break;end if (0==v196) then v197=v112[2];v198={};v196=1;end end end elseif (v113<=23) then if (v113<=21) then local v148=0;local v149;local v150;local v151;local v152;while true do if (v148==0) then v149=v112[2];v150,v151=v103(v110[v149]());v148=1;end if (v148==1) then v105=(v151 + v149) -1 ;v152=0;v148=2;end if (v148==2) then for v398=v149,v105 do v152=v152 + 1 ;v110[v398]=v150[v152];end break;end end elseif (v113>22) then local v199=0;local v200;while true do if (0==v199) then v200=v112[2];v110[v200]=v110[v200](v110[v200 + 1 ]);break;end end else local v201=0;local v202;while true do if (v201==0) then v202=v112[2];v110[v202]=v110[v202](v21(v110,v202 + 1 ,v105));break;end end end elseif (v113<=(15 + 10)) then if (v113==24) then v57[v112[3]]=v110[v112[2]];else v56[v112[3]]=v110[v112[2 -0 ]];end elseif (v113==26) then v110[v112[2]][v112[3]]=v112[1191 -(1069 + 118) ];elseif  not v110[v112[2]] then v104=v104 + 1 ;else v104=v112[3];end elseif (v113<=(92 -51)) then if (v113<=(73 -39)) then if (v113<=30) then if (v113<=28) then v110[v112[2]]=v112[3] + v110[v112[1 + 3 ]] ;elseif (v113>29) then local v209=v112[2];local v210=v112[6 -2 ];local v211=v209 + 2 ;local v212={v110[v209](v110[v209 + 1 ],v110[v211])};for v366=1,v210 do v110[v211 + v366 ]=v212[v366];end local v213=v212[1];if v213 then v110[v211]=v213;v104=v112[3 + 0 ];else v104=v104 + 1 ;end else v110[v112[2]]={};end elseif (v113<=32) then if (v113==31) then local v215=0;local v216;while true do if (v215==0) then v216=v112[2];v110[v216]=v110[v216]();break;end end else local v217=0;local v218;local v219;local v220;local v221;while true do if (0==v217) then v218=v112[2];v219,v220=v103(v110[v218](v110[v218 + 1 ]));v217=1;end if (v217==2) then for v481=v218,v105 do local v482=0;while true do if (v482==0) then v221=v221 + 1 ;v110[v481]=v219[v221];break;end end end break;end if (v217==1) then v105=(v220 + v218) -1 ;v221=791 -(368 + 423) ;v217=2;end end end elseif (v113>33) then do return v110[v112[2]]();end else do return v110[v112[2]];end end elseif (v113<=37) then if (v113<=35) then if (v112[2]==v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113>36) then local v223=0;local v224;local v225;local v226;while true do if (v223==1) then v226=v110[v224 + 2 ];if (v226>0) then if (v225>v110[v224 + 1 ]) then v104=v112[3];else v110[v224 + 3 ]=v225;end elseif (v225<v110[v224 + 1 ]) then v104=v112[3];else v110[v224 + 3 ]=v225;end break;end if (v223==0) then v224=v112[2];v225=v110[v224];v223=1;end end elseif (v110[v112[2]]==v112[4]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113<=39) then if (v113>38) then v110[v112[2]]=v110[v112[3]]%v110[v112[4]] ;else for v369=v112[2],v112[3] do v110[v369]=nil;end end elseif (v113==40) then local v228=v112[6 -4 ];v110[v228](v110[v228 + 1 ]);else local v229=0;local v230;local v231;local v232;local v233;while true do if (1==v229) then v105=(v232 + v230) -(3 -2) ;v233=0;v229=2;end if (v229==0) then v230=v112[2];v231,v232=v103(v110[v230](v21(v110,v230 + (19 -(10 + 8)) ,v112[3])));v229=1;end if (v229==2) then for v483=v230,v105 do local v484=0;while true do if (v484==0) then v233=v233 + 1 ;v110[v483]=v231[v233];break;end end end break;end end end elseif (v113<=48) then if (v113<=44) then if (v113<=42) then v110[v112[2]]=v112[3]~=0 ;elseif (v113>43) then if (v110[v112[2]]==v110[v112[446 -(416 + 26) ]]) then v104=v104 + 1 ;else v104=v112[3];end elseif ((v112[9 -6 ]==v7("\106\108\6\205","\93\53\41\72\155\206")) or (v112[3]==v7("\52\67\110\82\11\66\80","\98\83\38\26\52\110\44\38"))) then v110[v112[2]]=v57;else v110[v112[2]]=v57[v112[3]];end elseif (v113<=46) then if (v113==45) then local v234=0;local v235;local v236;while true do if (v234==0) then v235=v112[2];v236=v110[v235];v234=1;end if (v234==1) then for v485=v235 + 1 ,v105 do v15(v236,v110[v485]);end break;end end else v110[v112[2]]=v110[v112[3]] * v110[v112[4]] ;end elseif (v113==47) then v110[v112[1 + 1 ]]= #v110[v112[4 -1 ]];else v110[v112[2]]=v110[v112[3]] + v112[4] ;end elseif (v113<=52) then if (v113<=50) then if (v113>(487 -(145 + 293))) then local v240=v112[2];local v241={v110[v240](v21(v110,v240 + 1 ,v105))};local v242=0;for v371=v240,v112[4] do local v372=0;while true do if (v372==0) then v242=v242 + 1 ;v110[v371]=v241[v242];break;end end end else local v243=0;local v244;local v245;while true do if (0==v243) then v244=v112[433 -(44 + 386) ];v245=v110[v244];v243=1;end if (1==v243) then for v488=v244 + (1487 -(998 + 488)) ,v112[4] do v245=v245   .. v110[v488] ;end v110[v112[1 + 1 ]]=v245;break;end end end elseif (v113==51) then local v246=0;local v247;while true do if (v246==0) then v247=v112[2];v110[v247](v21(v110,v247 + 1 ,v112[3]));break;end end else local v248=0;local v249;local v250;while true do if (v248==1) then v110[v249 + 1 ]=v250;v110[v249]=v250[v112[4]];break;end if (v248==0) then v249=v112[2];v250=v110[v112[3]];v248=1;end end end elseif (v113<=54) then if (v113>53) then local v251=0;local v252;while true do if (v251==0) then v252=v112[2 + 0 ];v110[v252](v21(v110,v252 + 1 ,v112[775 -(201 + 571) ]));break;end end else v110[v112[2]]=v110[v112[3]] + v112[4] ;end elseif (v113>55) then v110[v112[1140 -(116 + 1022) ]]=v112[3]~=0 ;else local v255=0;local v256;while true do if (v255==0) then v256=v112[2];do return v21(v110,v256,v256 + v112[3] );end break;end end end elseif (v113<=84) then if (v113<=70) then if (v113<=63) then if (v113<=59) then if (v113<=57) then v110[v112[8 -6 ]][v112[3]]=v110[v112[4]];elseif (v113==58) then local v257=0;local v258;local v259;while true do if (v257==1) then for v489=v258 + 1 ,v112[4] do v259=v259   .. v110[v489] ;end v110[v112[2]]=v259;break;end if (v257==0) then v258=v112[3];v259=v110[v258];v257=1;end end else v110[v112[2 + 0 ]]=v110[v112[3]][v112[4]];end elseif (v113<=61) then if (v113==60) then v110[v112[2]]();else local v262=0;local v263;local v264;while true do if (v262==0) then v263=v112[2];v264=v110[v263];v262=1;end if (v262==1) then for v490=v263 + 1 ,v105 do v15(v264,v110[v490]);end break;end end end elseif (v113>62) then local v265=0;local v266;local v267;local v268;while true do if (v265==1) then v268=v110[v266 + 2 ];if (v268>0) then if (v267>v110[v266 + 1 ]) then v104=v112[3];else v110[v266 + 3 ]=v267;end elseif (v267<v110[v266 + 1 ]) then v104=v112[3];else v110[v266 + 3 ]=v267;end break;end if (v265==0) then v266=v112[2];v267=v110[v266];v265=1;end end elseif v110[v112[2]] then v104=v104 + 1 ;else v104=v112[3];end elseif (v113<=66) then if (v113<=64) then do return v110[v112[2]];end elseif (v113==65) then local v269=0;local v270;local v271;local v272;local v273;while true do if (v269==0) then v270=v112[2];v271,v272=v103(v110[v270](v110[v270 + 1 ]));v269=1;end if (1==v269) then v105=(v272 + v270) -1 ;v273=0 -0 ;v269=2;end if (2==v269) then for v491=v270,v105 do local v492=0;while true do if (0==v492) then v273=v273 + 1 ;v110[v491]=v271[v273];break;end end end break;end end elseif (v112[7 -5 ]==v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113<=(927 -(814 + 45))) then if (v113==67) then if (v110[v112[2]]==v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v110[v112[2]]<=v112[4]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113>69) then v110[v112[2]]=v110[v112[3]];else local v276=0;local v277;local v278;local v279;while true do if (v276==0) then v277=v101[v112[3]];v278=nil;v276=1;end if (v276==2) then for v493=1,v112[9 -5 ] do local v494=0;local v495;while true do if (v494==0) then v104=v104 + 1 + 0 ;v495=v100[v104];v494=1;end if (v494==1) then if (v495[1]==70) then v279[v493-(1 + 0) ]={v110,v495[3]};else v279[v493-1 ]={v56,v495[888 -(261 + 624) ]};end v109[ #v109 + 1 ]=v279;break;end end end v110[v112[2]]=v41(v277,v278,v57);break;end if (v276==1) then v279={};v278=v18({},{[v7("\24\203\95\25\35\241\78","\119\71\148\54")]=function(v496,v497) local v498=0;local v499;while true do if (v498==0) then v499=v279[v497];return v499[1][v499[2]];end end end,[v7("\103\233\43\44\200\230\86\210\32\49","\143\56\182\69\73\191")]=function(v500,v501,v502) local v503=0;local v504;while true do if (v503==0) then v504=v279[v501];v504[1][v504[2]]=v502;break;end end end});v276=2;end end end elseif (v113<=(136 -59)) then if (v113<=73) then if (v113<=71) then local v157=v112[2];v110[v157](v21(v110,v157 + 1 ,v105));elseif (v113==72) then v110[v112[2]]={};else local v281=v112[2];local v282=v110[v281];for v373=v281 + 1 ,v112[3] do v15(v282,v110[v373]);end end elseif (v113<=75) then if (v113>74) then local v283=v101[v112[1083 -(1020 + 60) ]];local v284;local v285={};v284=v18({},{[v7("\192\118\203\204\47\23\153","\225\159\41\162\162\75\114")]=function(v374,v375) local v376=v285[v375];return v376[1][v376[2]];end,[v7("\180\184\26\7\66\130\137\16\7\77","\53\235\231\116\98")]=function(v377,v378,v379) local v380=v285[v378];v380[1][v380[2]]=v379;end});for v382=1,v112[1427 -(630 + 793) ] do local v383=0;local v384;while true do if (v383==1) then if (v384[1]==70) then v285[v382-1 ]={v110,v384[3]};else v285[v382-(4 -3) ]={v56,v384[3]};end v109[ #v109 + 1 ]=v285;break;end if (v383==0) then v104=v104 + 1 ;v384=v100[v104];v383=1;end end end v110[v112[2]]=v41(v283,v284,v57);else local v287=0;local v288;local v289;local v290;while true do if (1==v287) then v290=v112[3];for v507=1,v290 do v289[v507]=v110[v288 + v507 ];end break;end if (v287==0) then v288=v112[2];v289=v110[v288];v287=1;end end end elseif (v113==76) then v110[v112[2]]=v112[3];elseif (v110[v112[2]]==v112[2 + 2 ]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113<=80) then if (v113<=78) then v110[v112[2]]= #v110[v112[3]];elseif (v113>79) then local v293=v112[2];local v294=v112[4];local v295=v293 + 2 ;local v296={v110[v293](v110[v293 + 1 ],v110[v295])};for v385=1,v294 do v110[v295 + v385 ]=v296[v385];end local v297=v296[1];if v297 then local v414=0;while true do if (v414==0) then v110[v295]=v297;v104=v112[3];break;end end else v104=v104 + 1 ;end else local v298=v112[6 -4 ];local v299,v300=v103(v110[v298](v21(v110,v298 + 1 ,v105)));v105=(v300 + v298) -1 ;local v301=0;for v388=v298,v105 do v301=v301 + 1 ;v110[v388]=v299[v301];end end elseif (v113<=82) then if (v113==81) then do return;end else local v302=0;local v303;local v304;local v305;local v306;while true do if (v302==2) then for v510=v303,v105 do local v511=0;while true do if (v511==0) then v306=v306 + 1 ;v110[v510]=v304[v306];break;end end end break;end if (0==v302) then v303=v112[2];v304,v305=v103(v110[v303]());v302=1;end if (v302==1) then v105=(v305 + v303) -1 ;v306=0;v302=2;end end end elseif (v113==83) then local v307=v112[2];local v308=v110[v307 + 2 ];local v309=v110[v307] + v308 ;v110[v307]=v309;if (v308>0) then if (v309<=v110[v307 + 1 ]) then local v512=0;while true do if (v512==0) then v104=v112[3];v110[v307 + 3 ]=v309;break;end end end elseif (v309>=v110[v307 + 1 ]) then v104=v112[1750 -(760 + 987) ];v110[v307 + 3 ]=v309;end else v110[v112[2]]=v110[v112[3]];end elseif (v113<=98) then if (v113<=91) then if (v113<=87) then if (v113<=85) then if (v112[2]<v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113>86) then v110[v112[2]]=v110[v112[3]]%v112[1917 -(1789 + 124) ] ;else local v315=v112[768 -(745 + 21) ];local v316=v110[v112[3]];v110[v315 + 1 ]=v316;v110[v315]=v316[v112[4]];end elseif (v113<=89) then if (v113==88) then v110[v112[2]]=v110[v112[3]][v110[v112[2 + 2 ]]];else local v322=0;local v323;while true do if (v322==0) then v323=v112[2];v110[v323]=v110[v323](v21(v110,v323 + 1 ,v112[3]));break;end end end elseif (v113==90) then v110[v112[5 -3 ]]=v110[v112[3]] * v110[v112[4]] ;else v57[v112[3]]=v110[v112[2]];end elseif (v113<=94) then if (v113<=92) then local v159=0;local v160;local v161;local v162;while true do if (v159==0) then v160=v112[7 -5 ];v161=v110[v160 + 2 ];v159=1;end if (v159==2) then if (v161>(0 + 0)) then if (v162<=v110[v160 + 1 ]) then local v528=0;while true do if (v528==0) then v104=v112[3];v110[v160 + 3 ]=v162;break;end end end elseif (v162>=v110[v160 + 1 ]) then v104=v112[3];v110[v160 + 3 ]=v162;end break;end if (v159==1) then v162=v110[v160] + v161 ;v110[v160]=v162;v159=2;end end elseif (v113==(74 + 19)) then local v327=0;local v328;local v329;local v330;while true do if (v327==1) then v330=v112[3];for v515=1,v330 do v329[v515]=v110[v328 + v515 ];end break;end if (v327==0) then v328=v112[2];v329=v110[v328];v327=1;end end else v104=v112[3];end elseif (v113<=(1151 -(87 + 968))) then if (v113==95) then if ((v112[3]==v7("\123\199\125\176","\92\36\130\51\230\80\196\121")) or (v112[3]==v7("\66\173\161\218\143\180\83","\218\37\200\213\188\234"))) then v110[v112[2]]=v57;else v110[v112[2]]=v57[v112[3]];end else local v332=v112[2];do return v110[v332](v21(v110,v332 + 1 ,v112[3]));end end elseif (v113==97) then local v333=0;local v334;while true do if (v333==0) then v334=v112[2];v110[v334](v110[v334 + 1 ]);break;end end else v110[v112[2]][v110[v112[3]]]=v112[4];end elseif (v113<=105) then if (v113<=101) then if (v113<=99) then if (v112[2]<v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[13 -10 ];end elseif (v113>100) then v110[v112[2 + 0 ]][v110[v112[3]]]=v110[v112[4]];else v110[v112[4 -2 ]]=v112[3] + v110[v112[4]] ;end elseif (v113<=103) then if (v113>102) then local v341=v112[1415 -(447 + 966) ];v110[v341]=v110[v341]();else local v343=0;local v344;local v345;local v346;while true do if (v343==0) then v344=v112[2];v345={v110[v344](v21(v110,v344 + 1 ,v105))};v343=1;end if (v343==1) then v346=0;for v518=v344,v112[4] do v346=v346 + 1 ;v110[v518]=v345[v346];end break;end end end elseif (v113>104) then if  not v110[v112[2]] then v104=v104 + 1 ;else v104=v112[3];end else v56[v112[3]]=v110[v112[2]];end elseif (v113<=109) then if (v113<=107) then if (v113==106) then do return;end else v110[v112[2]]=v56[v112[3]];end elseif (v113>108) then for v394=v112[2],v112[3] do v110[v394]=nil;end else v110[v112[5 -3 ]][v110[v112[3]]]=v110[v112[4]];end elseif (v113<=111) then if (v113==(1927 -(1703 + 114))) then v110[v112[2]][v110[v112[3]]]=v112[4];else v110[v112[2]]=v110[v112[3]]%v110[v112[4]] ;end elseif (v113>112) then v110[v112[703 -(376 + 325) ]]();else v110[v112[2]]=v110[v112[3]][v110[v112[4]]];end v104=v104 + 1 ;end end;end end end return v41(v40(),{},v28)(...);end if (v29==2) then function v33() local v62=0;local v63;while true do if (v62==0) then v63=v9(v27,v30,v30);v30=v30 + 1 ;v62=1;end if (v62==1) then return v63;end end end v34=nil;function v34() local v64,v65=v9(v27,v30,v30 + 2 );v30=v30 + (933 -(857 + 74)) ;return (v65 * 256) + v64 ;end v29=3;end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,15 -10 ),v7("\76\49","\19\98\31\43\110"),function(v66) if (v9(v66,2)==79) then local v81=0;while true do if (v81==0) then v31=v8(v11(v66,1,1));return "";end end else local v82=0;local v83;while true do if (v82==0) then v83=v10(v8(v66,45 -29 ));if v31 then local v125=0;local v126;while true do if (v125==1) then return v126;end if (v125==0) then v126=v13(v83,v31);v31=nil;v125=1;end end else return v83;end break;end end end end);v29=1;end if (v29==1) then v32=nil;function v32(v67,v68,v69) if v69 then local v84=0;local v85;while true do if (v84==0) then v85=(v67/(2^(v68-1)))%(2^(((v69-(1 -0)) -(v68-1)) + 1)) ;return v85-(v85%1) ;end end else local v86=2^(v68-1) ;return (((v67%(v86 + v86))>=v86) and (2 -1)) or (619 -(555 + 64)) ;end end v33=nil;v29=2;end if (4==v29) then function v36() local v70=0;local v71;local v72;local v73;local v74;local v75;local v76;while true do if (v70==1) then v73=1;v74=(v32(v72,1,20) * (2^(9 + 23))) + v71 ;v70=2;end if (v70==3) then if (v75==0) then if (v74==0) then return v76 * 0 ;else local v127=0;while true do if (v127==0) then v75=1;v73=0;break;end end end elseif (v75==(2924 -(282 + 595))) then return ((v74==0) and (v76 * (1/0))) or (v76 * NaN) ;end return v16(v76,v75-1023 ) * (v73 + (v74/(2^52))) ;end if (0==v70) then v71=v35();v72=v35();v70=1;end if (v70==2) then v75=v32(v72,4 + 17 ,31);v76=((v32(v72,32)==1) and  -1) or 1 ;v70=3;end end end v37=nil;function v37(v77) local v78=0;local v79;local v80;while true do if (0==v78) then v79=nil;if  not v77 then local v119=0;while true do if (v119==0) then v77=v35();if (v77==0) then return "";end break;end end end v78=1;end if (v78==2) then v80={};for v114=1, #v79 do v80[v114]=v10(v9(v11(v79,v114,v114)));end v78=3;end if (v78==3) then return v14(v80);end if (v78==1) then v79=v11(v27,v30,(v30 + v77) -1 );v30=v30 + v77 ;v78=2;end end end v29=5;end if (v29==5) then v38=v35;v39=nil;function v39(...) return {...},v20("#",...);end v29=6;end end end vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.2) ~  Much Love, Ferib 

]]--

